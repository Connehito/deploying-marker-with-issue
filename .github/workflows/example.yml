name: 'example'
on: push

env:
  DEPLOYMENT_RECORD_ISSUE_NUMBER: 28

permissions:
  issues: write

jobs:
  example:
    runs-on: ubuntu-latest
    steps:

      - uses: Connehito/deploying-marker-with-issue@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          action: "check-marker-detached"
          issue-number: ${{ env.DEPLOYMENT_RECORD_ISSUE_NUMBER }}
          exit-with-error: true # true = exit with error when the marker is already exists

      - uses: Connehito/deploying-marker-with-issue@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          action: "attach-marker"
          issue-number: ${{ env.DEPLOYMENT_RECORD_ISSUE_NUMBER }}
          exit-with-error: true # true = exit with error when the marker is already exists

      - name: Sleep 20s
        run: sleep 20

      - uses: Connehito/deploying-marker-with-issue@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          action: "check-marker-detached-or-assigned-actor"
          issue-number: ${{ env.DEPLOYMENT_RECORD_ISSUE_NUMBER }}
          exit-with-error: true # true = exit with error when the marker is already exists and not assigned actor

      - uses: Connehito/deploying-marker-with-issue@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          action: "check-marker-attached"
          issue-number: ${{ env.DEPLOYMENT_RECORD_ISSUE_NUMBER }}
          exit-with-error: true # true = exit with error when the marker is not exists

      - uses: Connehito/deploying-marker-with-issue@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          action: "detach-marker"
          issue-number: ${{ env.DEPLOYMENT_RECORD_ISSUE_NUMBER }}
          exit-with-error: false # true = exit with error when the marker is not exists

      - name: Set ref link
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "branch" ]]; then
            echo "REF_LINK=[${GITHUB_SHA:0:8}](https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA})" >> "${GITHUB_ENV}"
          elif [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "REF_LINK=[${GITHUB_REF_NAME}](https://github.com/${GITHUB_REPOSITORY}/releases/tag/${GITHUB_REF_NAME})" >> "${GITHUB_ENV}"
          fi

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ env.DEPLOYMENT_RECORD_ISSUE_NUMBER }}
          body: |
            @${{ github.actor }}
            `example.yml` workflow finished by ${{ env.REF_LINK }}
